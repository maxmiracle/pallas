<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>ru.maximserver</groupId>
	<artifactId>pallas</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>pallas</name>
	<description>Service architecture with JOOQ</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta-extensions-liquibase</artifactId>
			<version>3.19.18</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<!-- Specify the maven code generator plugin -->
				<!-- Use org.jooq                for the Open Source Edition
                         org.jooq.pro            for commercial editions with Java 17 support,
                         org.jooq.pro-java-11    for commercial editions with Java 11 support,
                         org.jooq.pro-java-8     for commercial editions with Java 8 support,
                         org.jooq.trial          for the free trial edition with Java 17 support,
                         org.jooq.trial-java-11  for the free trial edition with Java 11 support,
                         org.jooq.trial-java-8   for the free trial edition with Java 8 support

                 Note: Only the Open Source Edition is hosted on Maven Central.
                       Install the others locally using the provided scripts, or access them from here: https://repo.jooq.org
                       See the JDK version support matrix here: https://www.jooq.org/download/support-matrix-jdk -->

				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>3.19.18</version>

				<executions>
					<execution>
						<id>jooq-codegen</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<generator>
						<database>
							<name>org.jooq.meta.extensions.liquibase.LiquibaseDatabase</name>
							<properties>

								<!-- Specify the root path, e.g. a path in your Maven directory layout -->
								<property>
									<key>rootPath</key>
									<value>${basedir}/src/main/resources</value>
								</property>
								<!-- Specify the classpath location of your XML, YAML, or JSON script. -->
								<property>
									<key>scripts</key>
									<value>db/changelog/db.changelog-master.yaml</value>
								</property>

								<!-- Whether you want to include liquibase tables in generated output

                                     - false (default)
                                     - true: includes DATABASECHANGELOG and DATABASECHANGELOGLOCK tables -->
								<property>
									<key>includeLiquibaseTables</key>
									<value>false</value>
								</property>

								<!-- Properties prefixed "database." will be passed on to the liquibase.database.Database class
                                     if a matching setter is found -->
								<property>
									<key>database.liquibaseSchemaName</key>
									<value>public</value>
								</property>

								<!-- The property "changeLogParameters.contexts" will be passed on to the
                                     liquibase.database.Database.update() call (jOOQ 3.13.2+).
                                     See https://www.liquibase.org/documentation/contexts.html -->
								<property>
									<key>changeLogParameters.contexts</key>
									<value>!test</value>
								</property>
							</properties>
						</database>
						<target>
							<!-- The destination package of your generated classes (within the
                                 destination directory)

                                 jOOQ may append the schema name to this package if generating multiple schemas,
                                 e.g. org.jooq.your.packagename.schema1
                                      org.jooq.your.packagename.schema2 -->
							<packageName>ru.maximserver.pallas.db</packageName>

							<!-- The destination directory of your generated classes -->
						</target>
					</generator>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
